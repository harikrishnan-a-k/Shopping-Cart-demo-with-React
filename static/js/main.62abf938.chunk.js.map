{"version":3,"sources":["logo.svg","Navbar.js","Counter.js","CartItem.js","CartHeading.js","Cart.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","src","logo","alt","Counter","step","useState","count","setCount","onClick","width","CartItem","id","name","price","qty","updateQty","disabled","style","fontWeight","CartHeading","Cart","initialItems","localStorageItems","JSON","parse","window","localStorage","getItem","items","setItems","grandTotal","reduce","total","item","toFixed","newQty","newItems","map","useEffect","setItem","stringify","key","App","display","flexDirection","justifyContent","href","target","rel","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,kC,+RCiB5BC,MAbf,WACI,OACI,6BACI,wBAAIC,UAAU,UACV,yBAAKC,IAAKC,IAAMF,UAAU,cAAcG,IAAI,SAC5C,oCACA,sCACA,0C,eCQDC,G,MAhBD,SAAC,GAAY,IAAD,IAAVC,YAAU,MAAL,EAAK,IACCC,mBAAS,GADV,mBACfC,EADe,KACTC,EADS,KAOtB,OACI,yBAAKR,UAAU,WACX,4BAAKO,GACL,4BAAQE,QARF,kBAAID,EAASD,EAAMF,KAQzB,IAA4BA,GAC5B,4BAAQI,QARA,kBAAID,EAASD,EAAMF,KAQ3B,IAA8BA,GAC9B,yBAAKJ,IAAKM,EAAM,IAAI,EARZ,8MACF,4IAOmCG,MAAM,QAAQP,IAAI,c,qBCMxDQ,MAlBf,YAAiD,IAA9BC,EAA6B,EAA7BA,GAAGC,EAA0B,EAA1BA,KAAKC,EAAqB,EAArBA,MAAMC,EAAe,EAAfA,IAAIC,EAAW,EAAXA,UAOjC,OACI,yBAAKhB,UAAU,YACX,iCAAOa,GACP,oCAAUC,GACV,6BACE,4BAAQL,QARA,WACdO,EAAUJ,EAAGG,EAAI,IAOmBE,SAAUF,GAAK,GAA7C,KADF,KAC+DA,EAD/D,IACoE,4BAAQN,QAXvE,WACTO,EAAUJ,EAAGG,EAAI,KAUuD,MAEpE,2CAAgB,0BAAMG,MAAO,CAACC,WAAW,SAAzB,IAAoCJ,EAAID,EAAxC,QCFbM,G,MAZG,WACd,OACI,yBAAKpB,UAAU,gBACX,0CACA,uCACA,yCACA,yCCoCGqB,G,MAxCJ,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACHC,EAAkBC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,cADtC,EAEFtB,mBAASiB,GAAmBD,GAF1B,mBAElBO,EAFkB,KAEZC,EAFY,KAGnBC,EAAWF,EAAMG,QAAO,SAACC,EAAMC,GACjC,OAAOD,EAAOC,EAAKpB,MAAMoB,EAAKnB,MAChC,GAAGoB,QAAQ,GACPnB,EAAU,SAACJ,EAAGwB,GAChB,IAAMC,EAASR,EAAMS,KAAI,SAACJ,GACtB,OAAGA,EAAKtB,KAAKA,EACF,2BAAIsB,GAAX,IAAgBnB,IAAIqB,IAEjBF,KAEXJ,EAASO,IAYb,OANAE,qBAAU,WACNb,OAAOC,aAAaa,QAAQ,YAAYhB,KAAKiB,UAAUZ,MACzD,CAACA,IAKC,yBAAK7B,UAAU,QACX,wBAAIA,UAAU,cAAd,iBACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,cACV6B,EAAMS,KAAI,SAACJ,GACR,OAAO,kBAAC,EAAD,eAAUQ,IAAKR,EAAKtB,IAAQsB,EAA5B,CAAkClB,UAAWA,SAG5D,6BACA,wBAAIhB,UAAU,cAAd,mBAA4C+B,OCQzCY,MAxCf,WAQE,OACE,yBAAK3C,UAAU,OAEb,kBAAC,EAAD,MAEA,4BAAQA,UAAU,cAClB,kBAAC,EAAD,CAAMsB,aATE,CAAC,CAACV,GAAG,EAAGC,KAAK,aAAcC,MAAM,IAAMC,IAAI,GAC1C,CAACH,GAAG,EAAGC,KAAK,mBAAoBC,MAAM,KAAMC,IAAI,GAChD,CAACH,GAAG,EAAGC,KAAK,eAAgBC,MAAM,IAAOC,IAAI,MAQrD,yBAAKG,MAdM,CAAC0B,QAAQ,OACTC,cAAc,MACdC,eAAe,kBAazB,kBAAC,EAAD,CAASzC,KAAM,IACf,kBAAC,EAAD,CAASA,KAAM,KAMf,yBAAKJ,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzC,mCACO,4CADP,wBAGA,uBACEH,UAAU,WACV+C,KAAK,sBACLC,OAAO,SACPC,IAAI,uBAJN,kBCvBYC,QACW,cAA7BxB,OAAOyB,SAASC,UAEe,UAA7B1B,OAAOyB,SAASC,UAEhB1B,OAAOyB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.62abf938.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport './Navbar.css';\r\nimport logo from './logo.svg';\r\n\r\nfunction Navbar(){\r\n    return(\r\n        <div>\r\n            <ul className=\"navbar\">\r\n                <img src={logo} className=\"Navbar-logo\" alt=\"logo\" />\r\n                <li>Home</li>\r\n                <li>About </li>\r\n                <li>Contact</li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React,{useState} from 'react';\r\nimport './Counter.css';\r\n\r\nconst Counter=({step=1})=>{\r\n    const [count,setCount]=useState(0);\r\n    const upCount=()=>setCount(count+step);\r\n    const downCount=()=>setCount(count-step);\r\n    const happyface='https://lh3.googleusercontent.com/proxy/F-KxEd281oOy6mrjdi8n4hjsDNMGbTXxK3J6SCKHWoxi6lPrAI2nnUqK1E_y_TITvTwlcSPtxLhqP_FNw9x4uGz2_Gt_GgJDWGQ6OjzoCD2nAXAfoe6tB2LZeciJOFDGl3wpvTfxui--VJQVItU20XPIxCyA8QWek5k';\r\n    const sadFace='https://w2.pngwave.com/png/924/479/639/happy-face-emoji-smiley-sadness-happiness-video-crying-emoticon-facial-expression-png-clip-art.png';\r\n\r\n    return(\r\n        <div className=\"counter\">\r\n            <h2>{count}</h2>\r\n            <button onClick={upCount}>+{step}</button>\r\n            <button onClick={downCount}>-{step}</button>\r\n            <img src={count%2===0?happyface:sadFace} width=\"100px\" alt=\"smiley\"></img>\r\n        </div>\r\n    )\r\n}\r\nexport default Counter;\r\n","import React from 'react';\r\nimport './CartItem.css';\r\n\r\nfunction CartItem({id,name,price,qty,updateQty}){\r\n    const addOne=()=>{\r\n        updateQty(id,qty+1);\r\n    };\r\n    const subtractOne=()=>{\r\n        updateQty(id,qty-1);\r\n    };\r\n    return(\r\n        <div className=\"CartItem\">\r\n            <div> {name}</div>\r\n            <div> Rs.{price}</div>\r\n            <div>\r\n              <button onClick={subtractOne} disabled={qty<=1}>-</button>  {qty} <button onClick={addOne}>+</button>\r\n            </div>\r\n            <div>Total: Rs. <span style={{fontWeight:'bold'}}> {qty*price} </span></div>\r\n        </div>\r\n    )\r\n}\r\nexport default CartItem;","import React from 'react';\r\nimport \"./CartHeading.css\";\r\n\r\nconst CartHeading=()=>{\r\n    return(\r\n        <div className='CartHeadings'>\r\n            <div>Item_name</div>\r\n            <div> Price</div>\r\n            <div>Quantity</div>\r\n            <div>Total</div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default CartHeading;\r\n","import React,{useState,useEffect} from 'react';\r\nimport CartItem from './CartItem';\r\nimport CartHeading from './CartHeading';\r\nimport './Cart.css';\r\n\r\nconst Cart=({initialItems})=>{\r\n    const localStorageItems=JSON.parse(window.localStorage.getItem('cartItems')) ;\r\n    const [items,setItems]=useState(localStorageItems||initialItems);\r\n    const grandTotal=items.reduce((total,item)=>{\r\n        return total+(item.price*item.qty);\r\n    },0).toFixed(2);\r\n    const updateQty=(id,newQty)=>{\r\n        const newItems=items.map((item)=>{\r\n            if(item.id===id){\r\n                return {...item,qty:newQty};\r\n            }\r\n            return item;\r\n        });\r\n        setItems(newItems);\r\n    \r\n    }\r\n\r\n\r\n    // useEffect to update localstorage in state change of items\r\n    useEffect(()=>{\r\n        window.localStorage.setItem('cartItems',JSON.stringify(items));\r\n    },[items]);\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"Cart\">\r\n            <h1 className=\"Cart-title\">shopping cart</h1>\r\n            <CartHeading/>\r\n            <div className=\"Cart-Items\">\r\n                {items.map((item)=>{\r\n                    return <CartItem key={item.id} {...item} updateQty={updateQty}/>\r\n                })}\r\n            </div>\r\n            <div>\r\n            <h2 className=\"Cart-total\">grand total: Rs.{grandTotal}</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Cart;","import React from 'react';\nimport Navbar from './Navbar';\nimport Greeting from './Greeting';\nimport Counter from './Counter';\nimport logo from './logo.svg';\nimport './App.css';\nimport Cart from './Cart';\n\nfunction App() {\n  const flexStyle={display:'flex',\n                  flexDirection:'row',\n                  justifyContent:'space-between',\n                  };\n  const items=[{id:1, name:'nike shoes', price:2000, qty:2},\n               {id:2, name:'addidas football', price:1500, qty:5},\n               {id:3, name:'yonex racket', price:10000, qty:3}];\n  return (\n    <div className=\"App\">\n      \n      <Navbar/>\n      \n      <header className=\"App-header\">\n      <Cart initialItems={items}/>\n       <div style={flexStyle}>\n        <Counter step={5}/>\n        <Counter step={3}/>\n       </div>\n        \n        {/* <Greeting name=\"hari\" age=\"27\" excitementNo={8}/>\n        <Greeting name=\"manu\"  excitementNo={4}/> */}\n        \n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}